<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.javabrains</groupId>
	<artifactId>course-api-data</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>course-api-data</name>
	<description>Course API with data for Spring Boot QuickStart</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-boot-admin.version>2.0.3</spring-boot-admin.version>
		<spring-cloud.version>Finchley.M8</spring-cloud.version>
		<dockerfile-maven-version>1.4.0</dockerfile-maven-version>
	</properties>

	<dependencies>
	   <!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		  <dependency>
		    <groupId>org.springframework.hateoas</groupId>
		    <artifactId>spring-hateoas</artifactId>
		  </dependency>
		  <dependency>
		    <groupId>org.springframework.plugin</groupId>
		    <artifactId>spring-plugin-core</artifactId>
		  </dependency>
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-devtools</artifactId>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency> -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
	      <groupId>io.springfox</groupId>
	      <artifactId>springfox-swagger2</artifactId>
	      <version>2.4.0</version>
	    </dependency>
	
	    <dependency>
	      <groupId>io.springfox</groupId>
	      <artifactId>springfox-swagger-ui</artifactId>
	      <version>2.4.0</version>
	    </dependency>
	    <dependency>
		   <groupId>de.codecentric</groupId>
		   <artifactId>spring-boot-admin-starter-client</artifactId>
		   <version>${spring-boot-admin.version}</version>
		</dependency>
		<dependency>
	        <groupId>com.fasterxml.jackson.dataformat</groupId>
	        <artifactId>jackson-dataformat-xml</artifactId> <!-- this jar is needed to return xml response  -->
	        <version>2.9.0</version>
		</dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
	                <excludeDevtools>false</excludeDevtools>
	            </configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
				  <archive>
				    <manifest>
				      <addClasspath>true</addClasspath>
		              <classpathPrefix>libs/</classpathPrefix>
					  <mainClass>io.javabrains.CourseApiDataApplication</mainClass>
				    </manifest>
				  </archive>
				</configuration>
			    </plugin>
			    <plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-dependency-plugin</artifactId>
				    <executions>
				        <execution>
				            <id>copy-dependencies</id>
				            <phase>prepare-package</phase>
				            <goals>
				                <goal>copy-dependencies</goal>
				            </goals>
				            <configuration>
				                <outputDirectory>
				                    ${project.build.directory}/libs
				                </outputDirectory>
				            </configuration>
				        </execution>
				    </executions>
				</plugin>
				<plugin>
				    <groupId>org.springframework.boot</groupId>
				    <artifactId>spring-boot-maven-plugin</artifactId>
				    <executions>
				        <execution>
				            <goals>
				                <goal>repackage</goal>
				            </goals>
				            <configuration>
				                <finalName>${project.build.finalName}</finalName>
				                <!-- <classifier>spring-boot</classifier> -->
				                <mainClass>
				                  io.javabrains.CourseApiDataApplication
				                </mainClass>
				            </configuration>
				        </execution>
				        <!-- <execution>
				            <id>deploy</id>
				            <goals>
				                <goal>run</goal>
				            </goals>
				            <phase>install</phase>
				        </execution> -->
				    </executions>
				</plugin>
				<!-- <plugin>
			      <groupId>com.spotify</groupId>
			      This plugin points to the current $DOCKER_HOST and 
			      creates a Docker image with artifacts built from your Maven 
			      project via generated Dockerfile. https://github.com/spotify/docker-maven-plugin
			      <artifactId>docker-maven-plugin</artifactId>
			      <configuration>
			        <imageName>course_mysql_api</imageName>
			        <baseImage>java:8</baseImage>
			        <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
			        <labels>
			        <label>version="1.0"</label> LABEL instruction adds metadata to an image. To view an imageâ€™s labels, use the docker inspect command.
			        </labels>
			        <env>myName="John Doe"</env>
			        
			        below copy the service's jar file from target into the root directory of the image 
			        <resources>
			           <resource>
			             <targetPath>/</targetPath>
			             <directory>${project.build.directory}</directory>
			             <include>${project.build.finalName}.jar</include>
			           </resource>
			        </resources>
			      </configuration>
			    </plugin> -->
			    <plugin>
				  <groupId>com.spotify</groupId>
				  <artifactId>dockerfile-maven-plugin</artifactId>
				  <version>${dockerfile-maven-version}</version>
				  <executions>
				    <execution>
				      <id>default</id>
				      <goals>
				        <goal>build</goal>
				        <goal>push</goal>
				      </goals>
				    </execution>
				  </executions>
				  <configuration>
				    <repository>course_mysql_api</repository>
				    <tag>${project.version}</tag>
				    <!-- <buildArgs>
				      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
				    </buildArgs> -->
				  </configuration>
				</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
